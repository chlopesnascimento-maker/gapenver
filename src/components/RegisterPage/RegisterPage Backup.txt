import React, { useState, useEffect } from 'react';
import '../Shared/Form.css'; // Usando o nosso CSS compartilhado

// Importando as ferramentas de autenticação do Firebase
import { createUserWithEmailAndPassword } from "firebase/auth";
import { auth } from '../../firebase'; // Importando nosso objeto 'auth' configurado

function RegisterPage({ navigateTo }) {
  // Criando "estados" para guardar o que o usuário digita
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState(''); // Estado para guardar mensagens de erro

  // Função que será chamada quando o botão de cadastro for clicado
  const handleRegister = (e) => {
    e.preventDefault(); // Previne o comportamento padrão do link de recarregar a página
    setError(''); // Limpa erros antigos

    if (!email || !password) {
      setError('Por favor, preencha o e-mail e a senha.');
      return;
    }

    createUserWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        // Cadastro bem-sucedido!
        console.log(userCredential);
        alert('Conta criada com sucesso! Você será redirecionado para o login.');
        navigateTo('login'); // Redireciona para a página de login
      })
      .catch((error) => {
        // Lidando com erros comuns do Firebase
        console.error(error);
        if (error.code === 'auth/email-already-in-use') {
          setError('Este e-mail já está em uso.');
        } else if (error.code === 'auth/weak-password') {
          setError('A senha precisa ter no mínimo 6 caracteres.');
        } else {
          setError('Ocorreu um erro ao criar a conta. Tente novamente.');
        }
      });
  };

  // Efeito para configurar os campos de senha desta página
  useEffect(() => {
    const senhaInput = document.getElementById('reg-senha');
    const togglePassword = document.getElementById('toggle-reg-password');
    const capsLockWarning = document.getElementById('reg-caps-lock-warning');
    const eyeIconClosed = togglePassword.querySelector('.eye-icon-closed');
    const eyeIconOpen = togglePassword.querySelector('.eye-icon-open');

    const handleToggle = () => {
      const type = senhaInput.getAttribute('type') === 'password' ? 'text' : 'password';
      senhaInput.setAttribute('type', type);
      eyeIconClosed.style.display = (type === 'password') ? 'block' : 'none';
      eyeIconOpen.style.display = (type === 'password') ? 'none' : 'block';
    };

    const handleKeyUp = (event) => {
      capsLockWarning.style.display = event.getModifierState('CapsLock') ? 'block' : 'none';
    };
    
    const handleDateInput = (e) => {
      let value = e.target.value.replace(/\D/g, '');
      if (value.length > 2) value = value.substring(0, 2) + '/' + value.substring(2);
      if (value.length > 5) value = value.substring(0, 5) + '/' + value.substring(5, 9);
      e.target.value = value;
    };
    
    const nascimentoInput = document.getElementById('reg-nascimento');

    togglePassword.addEventListener('click', handleToggle);
    senhaInput.addEventListener('keyup', handleKeyUp);
    nascimentoInput.addEventListener('input', handleDateInput);

    // Função de "limpeza"
    return () => {
      togglePassword.removeEventListener('click', handleToggle);
      senhaInput.removeEventListener('keyup', handleKeyUp);
      nascimentoInput.removeEventListener('input', handleDateInput);
    };
  }, []);

  return (
    <div className="form-page-container">
      <div className="form-container">
        <div className="form-title-container">
            <svg className="title-icon-svg" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 2 L15 9 L22 9 L17 14 L19 21 L12 17 L5 21 L7 14 L2 9 L9 9 Z"/></svg>
            <svg className="title-icon-svg" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M4 2 L12 6 L20 2 L12 22 Z"/></svg>
            <h2 className="form-title">CADASTRE-SE</h2>
            <svg className="title-icon-svg right" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M4 2 L12 6 L20 2 L12 22 Z"/></svg>
            <svg className="title-icon-svg right" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 2 L15 9 L22 9 L17 14 L19 21 L12 17 L5 21 L7 14 L2 9 L9 9 Z"/></svg>
        </div>

        <form>
            <div className="form-group"><label htmlFor="reg-nome">NOME:</label><input type="text" id="reg-nome" /></div>
            <div className="form-group"><label htmlFor="reg-sobrenome">SOBRENOME:</label><input type="text" id="reg-sobrenome" /></div>
            <div className="form-group"><label htmlFor="reg-nascimento">DATA DE NASCIMENTO (dd/mm/aaaa):</label><input type="text" id="reg-nascimento" maxLength="10" /></div>
            <div className="form-group">
                <label htmlFor="reg-email">E-MAIL:</label>
                <input 
                  type="email" 
                  id="reg-email" 
                  value={email} 
                  onChange={(e) => setEmail(e.target.value)} 
                />
            </div>
            <div className="form-group">
                <label htmlFor="reg-senha">SENHA:</label>
                <div className="password-wrapper">
                    <input 
                      type="password" 
                      id="reg-senha" 
                      value={password}
                      onChange={(e) => setPassword(e.target.value)}
                    />
                    <span id="toggle-reg-password" className="toggle-password-icon">
                        <svg className="eye-icon-closed" xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24"><path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zm0 13c-2.76 0-5-2.24-5-5s2.24-5 