import React, { useState, useEffect } from 'react';
import './App.css';

import Header from './components/Header/Header';
import HomePage from './components/HomePage/HomePage';
import LoginPage from './components/LoginPage/LoginPage';
import RegisterPage from './components/RegisterPage/RegisterPage';
import ForgotPasswordPage from './components/ForgotPasswordPage/ForgotPasswordPage';
import WelcomePage from './components/WelcomePage/WelcomePage';
import EditProfilePage from './components/EditProfilePage/EditProfilePage';
import MyAccountPage from './components/MyAccountPage/MyAccountPage';
import Footer from './components/Footer/Footer';

import LoadingOverlay from './components/Shared/LoadingOverlay/LoadingOverlay';

import { supabase } from './supabaseClient';

function App() {
  const [currentPage, setCurrentPage] = useState('home');
  const [loading, setLoading] = useState(false);
  const [user, setUser] = useState(null);
  const [userData, setUserData] = useState(null);

  // Navegação
  const navigateTo = (page) => {
    window.scrollTo(0, 0);
    setCurrentPage(page);
  };

  // Logout real
  const handleLogout = async () => {
    setLoading(true);
    const { error } = await supabase.auth.signOut();
    if (error) {
      alert('Erro ao deslogar: ' + error.message);
    } else {
      setUser(null);
      setUserData(null);
      navigateTo('home');
    }
    setLoading(false);
  };

  // Carrega usuário ao iniciar
  const fetchUserData = async () => {
    setLoading(true);
    const { data: { user }, error } = await supabase.auth.getUser();
    if (error) {
      console.error('Erro ao buscar usuário:', error.message);
    } else if (user) {
      setUser(user);
      setUserData({
        nome: user.user_metadata?.nome || '',
        sobrenome: user.user_metadata?.sobrenome || '',
        photoURL: user.user_metadata?.photoURL || null
      });
    }
    setLoading(false);
  };

  useEffect(() => {
    fetchUserData();

    // Atualiza user em tempo real se houver login/logout
    const { data: authListener } = supabase.auth.onAuthStateChange((_event, session) => {
      if (session?.user) {
        setUser(session.user);
        setUserData({
          nome: session.user.user_metadata?.nome || '',
          sobrenome: session.user.user_metadata?.sobrenome || '',
          photoURL: session.user.user_metadata?.photoURL || null
        });
      } else {
        setUser(null);
        setUserData(null);
      }
    });

    return () => {
      authListener.subscription.unsubscribe();
    };
  }, []);

  // Partículas do mouse (mantido)
  useEffect(() => {
    let moveCounter = 0;
    const handleMouseMove = (e) => {
      const particle = document.createElement('div');
      particle.className = 'trail-particle';
      particle.style.left = `${e.clientX}px`;
      particle.style.top = `${e.clientY}px`;
      document.body.appendChild(particle);
      setTimeout(() => particle.remove(), 1000);

      moveCounter++;
      if (moveCounter % 4 === 0) {
        const star = document.createElement('div');
        star.className = 'star-particle';
        const offsetX = (Math.random() - 0.5) * 30;
        const offsetY = (Math.random() - 0.5) * 30;
        star.style.left = `${e.clientX + offsetX}px`;
        star.style.top = `${e.clientY + offsetY}px`;
        document.body.appendChild(star);
        setTimeout(() => star.remove(), 800);
      }
    };
    document.addEventListener('mousemove', handleMouseMove);
    return () => {
      document.removeEventListener('mousemove', handleMouseMove);
    };
  }, []);

  return (
    <div className="App">
      <div className="stars"></div>
      <LoadingOverlay show={loading} />

      <Header navigateTo={navigateTo} user={user} userData={userData} handleLogout={handleLogout} />

      <main>
        {currentPage === 'home' && <HomePage />}
        {currentPage === 'login' && <LoginPage navigateTo={navigateTo} setLoading={setLoading} />}
        {currentPage === 'register' && <RegisterPage navigateTo={navigateTo} setLoading={setLoading} />}
        {currentPage === 'forgotPassword' && <ForgotPasswordPage navigateTo={navigateTo} setLoading={setLoading} />}
        {currentPage === 'welcome' && <WelcomePage navigateTo={navigateTo} />}
        {currentPage === 'editProfile' && <EditProfilePage navigateTo={navigateTo} user={user} userData={userData} setLoading={setLoading} />}
        {currentPage === 'myAccount' && <MyAccountPage navigateTo={navigateTo} user={user} userData={userData} setLoading={setLoading} />}
      </main>

      <Footer />
    </div>
  );
}

export default App;
